"use strict";(self.webpackChunkneutralinojs_github_io=self.webpackChunkneutralinojs_github_io||[]).push([[9454],{7398:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>c,toc:()=>o});var r=s(4848),i=s(8453);const d={title:"Global Variables",toc_max_heading_level:2},l=void 0,c={id:"api/global-variables",title:"Global Variables",description:"These JavaScript variables can be used anywhere because these variables are defined in the window scope.",source:"@site/docs/api/global-variables.md",sourceDirName:"api",slug:"/api/global-variables",permalink:"/docs/api/global-variables",draft:!1,unlisted:!1,editUrl:"https://github.com/neutralinojs/neutralinojs.github.io/edit/main/docs/api/global-variables.md",tags:[],version:"current",frontMatter:{title:"Global Variables",toc_max_heading_level:2},sidebar:"docs",previous:{title:"Error Codes",permalink:"/docs/api/error-codes"},next:{title:"neu CLI",permalink:"/docs/cli/neu-cli"}},t={},o=[{value:"Predefined global variables",id:"predefined-global-variables",level:2},{value:"Custom global variables",id:"custom-global-variables",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"These JavaScript variables can be used anywhere because these variables are defined in the window scope."}),"\n",(0,r.jsx)(n.h2,{id:"predefined-global-variables",children:"Predefined global variables"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Variable"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"NL_OS"})}),(0,r.jsxs)(n.td,{children:["Operating system name: ",(0,r.jsx)(n.code,{children:"Linux"}),", ",(0,r.jsx)(n.code,{children:"Windows"}),", or ",(0,r.jsx)(n.code,{children:"Darwin"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"NL_ARCH"})}),(0,r.jsxs)(n.td,{children:["CPU architecture: ",(0,r.jsx)(n.code,{children:"x64"}),", ",(0,r.jsx)(n.code,{children:"arm"}),", ",(0,r.jsx)(n.code,{children:"itanium"}),", ",(0,r.jsx)(n.code,{children:"ia32"}),", or ",(0,r.jsx)(n.code,{children:"unknown"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"NL_APPID"})}),(0,r.jsx)(n.td,{children:"Application identifier"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"NL_APPVERSION"})}),(0,r.jsx)(n.td,{children:"Application version"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"NL_PORT"})}),(0,r.jsx)(n.td,{children:"Application port"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"NL_MODE"})}),(0,r.jsxs)(n.td,{children:["Mode of the application: ",(0,r.jsx)(n.code,{children:"window"}),", ",(0,r.jsx)(n.code,{children:"browser"}),", ",(0,r.jsx)(n.code,{children:"cloud"}),", or ",(0,r.jsx)(n.code,{children:"chrome"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"NL_VERSION"})}),(0,r.jsx)(n.td,{children:"Neutralinojs framework version"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"NL_CVERSION"})}),(0,r.jsx)(n.td,{children:"Neutralinojs client version"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"NL_CWD"})}),(0,r.jsx)(n.td,{children:"Current working directory"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"NL_PATH"})}),(0,r.jsx)(n.td,{children:"Application path"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"NL_ARGS"})}),(0,r.jsx)(n.td,{children:"Command-line arguments"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"NL_PID"})}),(0,r.jsx)(n.td,{children:"Identifier of the current process"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"NL_RESMODE"})}),(0,r.jsxs)(n.td,{children:["Source of application resources: ",(0,r.jsx)(n.code,{children:"bundle"})," or ",(0,r.jsx)(n.code,{children:"directory"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"NL_EXTENABLED"})}),(0,r.jsxs)(n.td,{children:["Returns ",(0,r.jsx)(n.code,{children:"true"})," if extensions are enabled"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"NL_COMMIT"})}),(0,r.jsx)(n.td,{children:"Framework binary's release commit hash"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"NL_CCOMMIT"})}),(0,r.jsx)(n.td,{children:"Client librar's release commit hash"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"NL_CMETHODS"})}),(0,r.jsxs)(n.td,{children:["Custom method identifiers (Returns the same output that ",(0,r.jsx)(n.a,{href:"/docs/api/custom#customgetmethods",children:(0,r.jsx)(n.code,{children:"custom.getMethods"})})," returns)."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"NL_WSAVSTLOADED"})}),(0,r.jsxs)(n.td,{children:["Returns ",(0,r.jsx)(n.code,{children:"true"})," if the initial window state was loaded from the saved configuration"]})]})]})]}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["You can use ",(0,r.jsx)(n.code,{children:"NL_COMMIT"})," and ",(0,r.jsx)(n.code,{children:"NL_CCOMMIT"})," values to identify the codebase snapshot if you use nightly releases."]})}),"\n",(0,r.jsx)(n.h2,{id:"custom-global-variables",children:"Custom global variables"}),"\n",(0,r.jsxs)(n.p,{children:["You can make custom global variables too via ",(0,r.jsx)(n.code,{children:"neutralino.config.json"}),", as shown\nbelow."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"globalVariables": {\n    "TEST": "Test Value"\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["The above custom global variable's value can be accessed with ",(0,r.jsx)(n.code,{children:"NL_TEST"}),". You can set any data type for\ncustom global variables. Look at the following examples."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"globalVariables": {\n    "TEST_1": 1,\n    "TEST_2": null,\n    "TEST_3": 3.5,\n    "TEST_4": [3, 5, 4, 5],\n    "TEST_5": {\n        "key": "value",\n        "anotherKey": 100\n    }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Avoid overriding predefined global variables."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>c});var r=s(6540);const i={},d=r.createContext(i);function l(e){const n=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);