(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{121:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),s=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},l=function(e){var t=s(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),l=s(n),b=a,m=l["".concat(i,".").concat(b)]||l[b]||d[b]||o;return n?r.a.createElement(m,p(p({ref:t},c),{},{components:n})):r.a.createElement(m,p({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=b;var p={};for(var u in t)hasOwnProperty.call(t,u)&&(p[u]=t[u]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var c=2;c<o;c++)i[c]=n[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},90:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return p})),n.d(t,"toc",(function(){return u})),n.d(t,"default",(function(){return s}));var a=n(3),r=n(8),o=(n(0),n(121)),i={title:"Auto Updater"},p={unversionedId:"how-to/auto-updater",id:"how-to/auto-updater",isDocsHomePage:!1,title:"Auto Updater",description:"Application developers often release new versions of their applications. Neutralinojs offers a simple and",source:"@site/docs/how-to/auto-updater.md",slug:"/how-to/auto-updater",permalink:"/docs/how-to/auto-updater",editUrl:"https://github.com/neutralinojs/neutralinojs.github.io/edit/main/docs/how-to/auto-updater.md",version:"current",sidebar:"docs",previous:{title:"Extensions Overview",permalink:"/docs/how-to/extensions-overview"},next:{title:"Distribution Overview",permalink:"/docs/distribution/overview"}},u=[{value:"Creating the update manifest",id:"creating-the-update-manifest",children:[]},{value:"Hosting the update manifest and resources",id:"hosting-the-update-manifest-and-resources",children:[]},{value:"Writing code to update your app",id:"writing-code-to-update-your-app",children:[]}],c={toc:u};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Application developers often release new versions of their applications. Neutralinojs offers a simple and\nextendable software updater for all supported operating systems. As you already know, Neutralinojs bundles all\napplication resources to the ",Object(o.b)("inlineCode",{parentName:"p"},"resources.neu")," file. The auto updater basically replaces the existing ",Object(o.b)("inlineCode",{parentName:"p"},"resources.neu"),"\nwith the latest application resources over the network."),Object(o.b)("h2",{id:"creating-the-update-manifest"},"Creating the update manifest"),Object(o.b)("p",null,"When you ask Neutralinojs to check for updates, it will check the update manifest via the network. Update manifest\nrefers to a JSON document which has the following format."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-json"},'{\n    "applicationId": "js.neutralino.sample",\n    "version": "0.0.2",\n    "resourcesURL": "http://example.com/updater_test/update_res.neu",\n    "data": {\n    }\n}\n')),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"applicationId")," String: Application identifier. You need to use the same name you used in ",Object(o.b)("inlineCode",{parentName:"li"},"neutralinojs.config.json"),".\nOtherwise, the update check operation will not proceed."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"version")," String: Application version."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"resourcesURL")," String: A link to download ",Object(o.b)("inlineCode",{parentName:"li"},"resources.neu"),". You can use any file name as you wish, but make sure to\nserve data with the ",Object(o.b)("inlineCode",{parentName:"li"},"Content-Type: application/octet-stream")," header."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"data")," Object (optional): Additional data about the update. Accepts any JSON value.")),Object(o.b)("h2",{id:"hosting-the-update-manifest-and-resources"},"Hosting the update manifest and resources"),Object(o.b)("p",null,"Host the application manifest and resources file on the internet or a private network according to your access\nrequirements. You can test auto updater locally by setting up a static server or placing update manifest and\nthe resource file into your application's resources directory."),Object(o.b)("p",null,"Also, you can setup a DevOps pipeline to automate your application updates if you need. If you release\na new application version by upgrading Neutralinojs server, users have to download/install the app\nagain since the auto updater only update application resources (including Neutralinojs client)."),Object(o.b)("h2",{id:"writing-code-to-update-your-app"},"Writing code to update your app"),Object(o.b)("p",null,"Call the following function whenever you need to check for updates."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},'\ntry {\n    let url = "http://example.com/updater_test/update_manifest.json";\n    let manifest = await Neutralino.updater.checkForUpdates(url);\n}\ncatch(err) {\n    // Handle errors\n}\n\n')),Object(o.b)("p",null,"Next, you can use the ",Object(o.b)("inlineCode",{parentName:"p"},"manifest")," object to compare versions."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},'\ntry {\n    let url = "http://example.com/updater_test/update_manifest.json";\n    let manifest = await Neutralino.updater.checkForUpdates(url);\n\n    if(manifest.version != NL_APPVERSION) {\n        await Neutralino.updater.install();\n        await Neutralino.app.restartProcess();\n    }\n}\ncatch(err) {\n    // Handle errors\n}\n\n')),Object(o.b)("p",null,"As shown in the above code snippet, you can call ",Object(o.b)("inlineCode",{parentName:"p"},"Neutralino.updater.install")," to perform the update based\non the downloaded manifest. Later, restart the application with the ",Object(o.b)("inlineCode",{parentName:"p"},"app.restartProcess")," function."))}s.isMDXComponent=!0}}]);