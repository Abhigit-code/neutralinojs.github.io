(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{101:function(e,n,i){"use strict";i.d(n,"a",(function(){return s})),i.d(n,"b",(function(){return m}));var t=i(0),a=i.n(t);function o(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function r(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function l(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?r(Object(i),!0).forEach((function(n){o(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function d(e,n){if(null==e)return{};var i,t,a=function(e,n){if(null==e)return{};var i,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)i=o[t],n.indexOf(i)>=0||(a[i]=e[i]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)i=o[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var c=a.a.createContext({}),b=function(e){var n=a.a.useContext(c),i=n;return e&&(i="function"==typeof e?e(n):l(l({},n),e)),i},s=function(e){var n=b(e.components);return a.a.createElement(c.Provider,{value:n},e.children)},w={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},u=a.a.forwardRef((function(e,n){var i=e.components,t=e.mdxType,o=e.originalType,r=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),s=b(i),u=t,m=s["".concat(r,".").concat(u)]||s[u]||w[u]||o;return i?a.a.createElement(m,l(l({ref:n},c),{},{components:i})):a.a.createElement(m,l({ref:n},c))}));function m(e,n){var i=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=i.length,r=new Array(o);r[0]=u;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l.mdxType="string"==typeof e?e:t,r[1]=l;for(var c=2;c<o;c++)r[c]=i[c];return a.a.createElement.apply(null,r)}return a.a.createElement.apply(null,i)}u.displayName="MDXCreateElement"},82:function(e,n,i){"use strict";i.r(n),i.d(n,"frontMatter",(function(){return r})),i.d(n,"metadata",(function(){return l})),i.d(n,"toc",(function(){return d})),i.d(n,"default",(function(){return b}));var t=i(3),a=i(8),o=(i(0),i(101)),r={title:"Neutralino.window"},l={unversionedId:"api/window",id:"api/window",isDocsHomePage:!1,title:"Neutralino.window",description:"Neutralino.window namespace contains methods related to the current native window instance. This namespace's methods will work only for",source:"@site/docs/api/window.md",slug:"/api/window",permalink:"/docs/api/window",editUrl:"https://github.com/neutralinojs/neutralinojs.github.io/edit/main/docs/api/window.md",version:"current",sidebar:"docs",previous:{title:"Neutralino.app",permalink:"/docs/api/app"},next:{title:"Neutralino.filesystem",permalink:"/docs/api/filesystem"}},d=[{value:"window.setTitle(title)",id:"windowsettitletitle",children:[{value:"Parameters",id:"parameters",children:[]}]},{value:"window.minimize()",id:"windowminimize",children:[]},{value:"window.maximize()",id:"windowmaximize",children:[]},{value:"window.unmaximize()",id:"windowunmaximize",children:[]},{value:"window.isMaximized()",id:"windowismaximized",children:[{value:"Return object (awaited):",id:"return-object-awaited",children:[]}]},{value:"window.setFullScreen()",id:"windowsetfullscreen",children:[]},{value:"window.exitFullScreen()",id:"windowexitfullscreen",children:[]},{value:"window.isFullScreen()",id:"windowisfullscreen",children:[{value:"Return object (awaited):",id:"return-object-awaited-1",children:[]}]},{value:"window.show()",id:"windowshow",children:[]},{value:"window.hide()",id:"windowhide",children:[]},{value:"window.isVisible()",id:"windowisvisible",children:[{value:"Return object (awaited):",id:"return-object-awaited-2",children:[]}]},{value:"window.focus()",id:"windowfocus",children:[]},{value:"window.move(x, y)",id:"windowmovex-y",children:[{value:"Parameters",id:"parameters-1",children:[]}]},{value:"window.setIcon(icon)",id:"windowseticonicon",children:[{value:"Parameters",id:"parameters-2",children:[]}]},{value:"window.setDraggableRegion(domId)",id:"windowsetdraggableregiondomid",children:[{value:"Parameters",id:"parameters-3",children:[]}]},{value:"window.setSize(WindowSizeOptions)",id:"windowsetsizewindowsizeoptions",children:[{value:"WindowSizeOptions",id:"windowsizeoptions",children:[]}]}],c={toc:d};function b(e){var n=e.components,i=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(t.a)({},c,i,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"Neutralino.window")," namespace contains methods related to the current native window instance. This namespace's methods will work only for\nthe ",Object(o.b)("a",{parentName:"p",href:"/docs/configuration/modes#window"},Object(o.b)("inlineCode",{parentName:"a"},"window"))," mode."),Object(o.b)("h2",{id:"windowsettitletitle"},"window.setTitle(title)"),Object(o.b)("p",null,"Sets the title of the native window. "),Object(o.b)("h3",{id:"parameters"},"Parameters"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"title"),": Title of the window as a string.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"await Neutralino.window.setTitle('New title');\n")),Object(o.b)("h2",{id:"windowminimize"},"window.minimize()"),Object(o.b)("p",null,"Minimizes the native window."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"await Neutralino.window.minimize();\n")),Object(o.b)("h2",{id:"windowmaximize"},"window.maximize()"),Object(o.b)("p",null,"Maximizes the native window."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"await Neutralino.window.maximize();\n")),Object(o.b)("h2",{id:"windowunmaximize"},"window.unmaximize()"),Object(o.b)("p",null,"Restores the native window."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"await Neutralino.window.unmaximize();\n")),Object(o.b)("h2",{id:"windowismaximized"},"window.isMaximized()"),Object(o.b)("p",null,"Returns ",Object(o.b)("inlineCode",{parentName:"p"},"true")," if the native window is maximized."),Object(o.b)("h3",{id:"return-object-awaited"},"Return object (awaited):"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"boolean"),": ",Object(o.b)("inlineCode",{parentName:"li"},"true")," or ",Object(o.b)("inlineCode",{parentName:"li"},"false")," based on current maximized status.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"let status = await Neutralino.window.isMaximized();\n")),Object(o.b)("h2",{id:"windowsetfullscreen"},"window.setFullScreen()"),Object(o.b)("p",null,"Enables the full screen mode."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"await Neutralino.window.setFullScreen();\n")),Object(o.b)("h2",{id:"windowexitfullscreen"},"window.exitFullScreen()"),Object(o.b)("p",null,"Exits from the full screen mode."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"await Neutralino.window.exitFullScreen();\n")),Object(o.b)("h2",{id:"windowisfullscreen"},"window.isFullScreen()"),Object(o.b)("p",null,"Returns ",Object(o.b)("inlineCode",{parentName:"p"},"true")," if the native window is in the full screen mode."),Object(o.b)("h3",{id:"return-object-awaited-1"},"Return object (awaited):"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"boolean"),": ",Object(o.b)("inlineCode",{parentName:"li"},"true")," or ",Object(o.b)("inlineCode",{parentName:"li"},"false")," based on current full screen status.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"let status = await Neutralino.window.isFullScreen();\n")),Object(o.b)("h2",{id:"windowshow"},"window.show()"),Object(o.b)("p",null,"Shows the native window."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"await Neutralino.window.show();\n")),Object(o.b)("h2",{id:"windowhide"},"window.hide()"),Object(o.b)("p",null,"Hides the native window."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"await Neutralino.window.hide();\n")),Object(o.b)("h2",{id:"windowisvisible"},"window.isVisible()"),Object(o.b)("p",null,"Returns ",Object(o.b)("inlineCode",{parentName:"p"},"true")," if the native window is visible."),Object(o.b)("h3",{id:"return-object-awaited-2"},"Return object (awaited):"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"boolean"),": ",Object(o.b)("inlineCode",{parentName:"li"},"true")," or ",Object(o.b)("inlineCode",{parentName:"li"},"false")," based on current visibility status.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"let status = await Neutralino.window.isVisible();\n")),Object(o.b)("h2",{id:"windowfocus"},"window.focus()"),Object(o.b)("p",null,"Focuses the native window."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"await Neutralino.window.focus();\n")),Object(o.b)("h2",{id:"windowmovex-y"},"window.move(x, y)"),Object(o.b)("p",null,"Moves the native window into given coordinates. Neutralinojs's cross-platform coordinate system starts from top-left corner of the screen.\nIn other words, ",Object(o.b)("inlineCode",{parentName:"p"},"x=0,y=0")," point refers to the top-left corner of the device's main screen. "),Object(o.b)("h3",{id:"parameters-1"},"Parameters"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"x"),": A integer value for the horizontal position."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"y"),": A integer value for the vertical position.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"await Neutralino.window.move(200, 400);\n")),Object(o.b)("h2",{id:"windowseticonicon"},"window.setIcon(icon)"),Object(o.b)("p",null,"Sets an icon for the native window or Dock.\xa0"),Object(o.b)("h3",{id:"parameters-2"},"Parameters"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"icon"),": Path of the icon. A ",Object(o.b)("inlineCode",{parentName:"li"},"200x200")," PNG image file works fine on all supported operating systems.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"const icon = '/resources/icons/appIcon.png';\nawait Neutralino.window.setIcon(icon);\n")),Object(o.b)("h2",{id:"windowsetdraggableregiondomid"},"window.setDraggableRegion(domId)"),Object(o.b)("p",null,"Converts a give DOM element to a draggable region. The user will be able to drag the native window by dragging the\ngiven DOM element. This feature is suitable to make custom window bars along with the ",Object(o.b)("a",{parentName:"p",href:"../configuration/neutralino.config.json#modeswindowborderless-boolean"},"borderless mode"),". "),Object(o.b)("h3",{id:"parameters-3"},"Parameters"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"domId"),": A DOM element identifier as a string.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"await Neutralino.window.setDraggableRegion('myCustomTitleBar');\n")),Object(o.b)("h2",{id:"windowsetsizewindowsizeoptions"},"window.setSize(WindowSizeOptions)"),Object(o.b)("p",null,"Converts a give DOM element to a draggable region. The user will be able to drag the native window by dragging the\ngiven DOM element. This feature is suitable to make custom window bars along with the ",Object(o.b)("a",{parentName:"p",href:"../configuration/neutralino.config.json#modeswindowborderless-boolean"},"borderless mode"),". "),Object(o.b)("h3",{id:"windowsizeoptions"},"WindowSizeOptions"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"width"),": Window width in pixels."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"height"),": Window height in pixels."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"minWidth"),": Minimum width of the window in pixels."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"minHeight"),": Minimum height of the window in pixels."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"maxWidth"),": Maximum width of the window in pixels."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"maxHeight"),": Maximum height of the window in pixels."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"resizable"),": A boolean value to make the window resizable or fixed.")),Object(o.b)("p",null,"This method always expects width and height couples.\nFor example, if you are sending ",Object(o.b)("inlineCode",{parentName:"p"},"minWidth"),", you should send ",Object(o.b)("inlineCode",{parentName:"p"},"minHeight")," too."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"await Neutralino.window.setSize({\n    width: 500,\n    height: 200,\n    maxWidth: 600,\n    maxHeight: 400\n});\n\nawait Neutralino.window.setSize({\n    resizable: false\n});\n")))}b.isMDXComponent=!0}}]);