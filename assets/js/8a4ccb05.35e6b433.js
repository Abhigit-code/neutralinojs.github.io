(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{115:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return s}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var b=a.a.createContext({}),u=function(e){var t=a.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return a.a.createElement(b.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),p=u(n),d=r,s=p["".concat(l,".").concat(d)]||p[d]||m[d]||i;return n?a.a.createElement(s,o(o({ref:t},b),{},{components:n})):a.a.createElement(s,o({ref:t},b))}));function s(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var b=2;b<i;b++)l[b]=n[b];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},94:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(8),i=(n(0),n(115)),l={title:"Neutralino.computer"},o={unversionedId:"api/computer",id:"api/computer",isDocsHomePage:!1,title:"Neutralino.computer",description:"Neutralino.computer namespace contains methods related to the user's hardware.",source:"@site/docs/api/computer.md",slug:"/api/computer",permalink:"/docs/api/computer",editUrl:"https://github.com/neutralinojs/neutralinojs.github.io/edit/main/docs/api/computer.md",version:"current",sidebar:"docs",previous:{title:"Neutralino.clipboard",permalink:"/docs/api/clipboard"},next:{title:"Neutralino.debug",permalink:"/docs/api/debug"}},c=[{value:"computer.getMemoryInfo()",id:"computergetmemoryinfo",children:[{value:"Return Object (awaited):",id:"return-object-awaited",children:[]}]},{value:"computer.getArch()",id:"computergetarch",children:[{value:"Return String (awaited):",id:"return-string-awaited",children:[]}]},{value:"computer.getKernelInfo()",id:"computergetkernelinfo",children:[{value:"Return Object (awaited):",id:"return-object-awaited-1",children:[]}]},{value:"computer.getOSInfo()",id:"computergetosinfo",children:[{value:"Return Object (awaited):",id:"return-object-awaited-2",children:[]}]},{value:"computer.getCPUInfo()",id:"computergetcpuinfo",children:[{value:"Return Object (awaited):",id:"return-object-awaited-3",children:[]}]},{value:"computer.getDisplays()",id:"computergetdisplays",children:[{value:"Return Object (awaited):",id:"return-object-awaited-4",children:[]},{value:"Display",id:"display",children:[]}]},{value:"computer.getMousePosition()",id:"computergetmouseposition",children:[{value:"Return Object (awaited):",id:"return-object-awaited-5",children:[]}]}],b={toc:c};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"Neutralino.computer")," namespace contains methods related to the user's hardware."),Object(i.b)("h2",{id:"computergetmemoryinfo"},"computer.getMemoryInfo()"),Object(i.b)("p",null,"Returns system memory statistics in bytes."),Object(i.b)("h3",{id:"return-object-awaited"},"Return Object (awaited):"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"physical")," Object: Physical memory information.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"total")," Number: Total physical memory."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"available")," Number: Available physical memory."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"virtual")," Object: Virtual memory information.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"total")," Number: Total virtual memory."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"available")," Number: Available virtual memory.")))),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"let memoryInfo = await Neutralino.computer.getMemoryInfo();\nconsole.log(`RAM size: ${memoryInfo.physical.total}B`);\n")),Object(i.b)("h2",{id:"computergetarch"},"computer.getArch()"),Object(i.b)("p",null,"Returns the CPU architecture identifier: ",Object(i.b)("inlineCode",{parentName:"p"},"x64")," (x86 64bit/arm64), ",Object(i.b)("inlineCode",{parentName:"p"},"ia32")," (x86 32bit), ",Object(i.b)("inlineCode",{parentName:"p"},"arm"),", ",Object(i.b)("inlineCode",{parentName:"p"},"itanium"),",\nor ",Object(i.b)("inlineCode",{parentName:"p"},"unknown"),"."),Object(i.b)("h3",{id:"return-string-awaited"},"Return String (awaited):"),Object(i.b)("p",null,"CPU architecture."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"let arch = await Neutralino.computer.getArch();\nconsole.log(arch);\n")),Object(i.b)("h2",{id:"computergetkernelinfo"},"computer.getKernelInfo()"),Object(i.b)("p",null,"Returns operating system kernel information."),Object(i.b)("h3",{id:"return-object-awaited-1"},"Return Object (awaited):"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"variant")," String: Kernel type: ",Object(i.b)("inlineCode",{parentName:"li"},"Linux"),", ",Object(i.b)("inlineCode",{parentName:"li"},"Darwin"),", ",Object(i.b)("inlineCode",{parentName:"li"},"Windows NT"),", or ",Object(i.b)("inlineCode",{parentName:"li"},"Unknown"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"version")," String: Version in the ",Object(i.b)("inlineCode",{parentName:"li"},"<major>.<minor>.<patch>-<build_number>")," format.")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"let kernelInfo = await Neutralino.computer.getKernelInfo();\nconsole.log(`Kernel: ${kernelInfo.variant}`);\n")),Object(i.b)("h2",{id:"computergetosinfo"},"computer.getOSInfo()"),Object(i.b)("p",null,"Returns operating system information."),Object(i.b)("h3",{id:"return-object-awaited-2"},"Return Object (awaited):"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"name")," String: Operating system name."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"description")," String: Operating system description."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"version")," String: Version in the ",Object(i.b)("inlineCode",{parentName:"li"},"<major>.<minor>.<patch>-<build_number>")," format.")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"let osInfo = await Neutralino.computer.getOSInfo();\nconsole.log(`OS: ${kernelInfo.name}`);\n")),Object(i.b)("h2",{id:"computergetcpuinfo"},"computer.getCPUInfo()"),Object(i.b)("p",null,"Returns the CPU information."),Object(i.b)("h3",{id:"return-object-awaited-3"},"Return Object (awaited):"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"vendor")," String: Vendor name."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"model")," String: Model name."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"frequency")," Number: The current CPU frequency in hertz (Hz)."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"architecture")," String: CPU architecture name. Returns the same value as the ",Object(i.b)("inlineCode",{parentName:"li"},"getArch")," function."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"logicalThreads")," Number: Number of logical threads in the parallelism model."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"physicalCores")," Number: Number of physical cores in the CPU."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"physicalUnits")," Number: Number of physical CPU hardware units in the motherboard.")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"let cpuInfo = await Neutralino.computer.getCPUInfo();\nconsole.log(`CPU model: ${cpuInfo.model}`);\n")),Object(i.b)("h2",{id:"computergetdisplays"},"computer.getDisplays()"),Object(i.b)("p",null,"Returns information about all connected displays."),Object(i.b)("h3",{id:"return-object-awaited-4"},"Return Object (awaited):"),Object(i.b)("p",null,"An array of ",Object(i.b)("inlineCode",{parentName:"p"},"Display")," objects."),Object(i.b)("h3",{id:"display"},"Display"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"id")," Number: A virtual display identifier."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"resolution")," Object: Display resolution information.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"width")," Number: Display width."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"height")," Number: Display height."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"dpi")," Number: DPI (Dots Per Inch) value."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"bpp")," Number: BPP (Bits Per Pixel) value (also known as the color depth)."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"refreshRate")," Number: Refresh rate in hertz (Hz).")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"let displays = await Neutralino.computer.getDisplays();\nfor(let display of displays) {\n    console.log(display);\n}\n")),Object(i.b)("h2",{id:"computergetmouseposition"},"computer.getMousePosition()"),Object(i.b)("p",null,"Returns the current mouse cursor position."),Object(i.b)("h3",{id:"return-object-awaited-5"},"Return Object (awaited):"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"x")," Number: Distance from the left edge of the screen in pixels."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"y")," Number: Distance from the top edge of the screen in pixels.")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"let pos = await Neutralino.computer.getMousePosition();\nconsole.log(`Pos: ${pos.x}, ${pos.y}`);\n")))}u.isMDXComponent=!0}}]);