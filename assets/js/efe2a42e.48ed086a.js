"use strict";(self.webpackChunkneutralinojs_github_io=self.webpackChunkneutralinojs_github_io||[]).push([[3347],{9347:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>x,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var s=t(4848),i=t(8453);const a={title:"Neutralino.extensions",toc_max_heading_level:2},o=void 0,r={id:"api/extensions",title:"Neutralino.extensions",description:"Neutralino.extensions namespace contains methods related to Neutralino extensions. Extensions let",source:"@site/docs/api/extensions.md",sourceDirName:"api",slug:"/api/extensions",permalink:"/docs/api/extensions",draft:!1,unlisted:!1,editUrl:"https://github.com/neutralinojs/neutralinojs.github.io/edit/main/docs/api/extensions.md",tags:[],version:"current",frontMatter:{title:"Neutralino.extensions",toc_max_heading_level:2},sidebar:"docs",previous:{title:"Neutralino.events",permalink:"/docs/api/events"},next:{title:"Neutralino.filesystem",permalink:"/docs/api/filesystem"}},d={},l=[{value:"extensions.dispatch(extensionId, eventName, data)",id:"extensionsdispatchextensionid-eventname-data",level:2},{value:"Parameters",id:"parameters",level:3},{value:"extensions.broadcast(eventName, data)",id:"extensionsbroadcasteventname-data",level:2},{value:"Parameters",id:"parameters-1",level:3},{value:"extensions.getStats()",id:"extensionsgetstats",level:2},{value:"Return Object (awaited):",id:"return-object-awaited",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Neutralino.extensions"})," namespace contains methods related to Neutralino extensions. Extensions let\ndevelopers write custom backend APIs for Neutralinojs applications."]}),"\n",(0,s.jsxs)(n.p,{children:["Learn more about extensions with ",(0,s.jsx)(n.a,{href:"/docs/how-to/extensions-overview",children:"this guide"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"extensionsdispatchextensionid-eventname-data",children:"extensions.dispatch(extensionId, eventName, data)"}),"\n",(0,s.jsx)(n.p,{children:"Dispatches a new event to an extension instance. If the targeted extension is not connected yet,\nNeutralino client library will queue the function call and send whenever the extension comes online."}),"\n",(0,s.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"extensionId"})," String: Extension identifier."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"eventName"})," String: Name of the event."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"data"})," Object (optional): Additional data for the event."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"await Neutralino.extensions.dispatch('js.neutralino.sampleextension',\n            'myTestEvent', {myData: 'Test data'});\n\nawait Neutralino.extensions.dispatch('js.neutralino.sampleextension',\n            'myTestEvent');\n"})}),"\n",(0,s.jsx)(n.h2,{id:"extensionsbroadcasteventname-data",children:"extensions.broadcast(eventName, data)"}),"\n",(0,s.jsxs)(n.p,{children:["Dispatches a new event to all connected extensions. If an extension is loaded but not connected yet,\nthe particular extension won't get the new event. Use ",(0,s.jsx)(n.a,{href:"#extensionsdispatchextensionid-eventname-data",children:(0,s.jsx)(n.code,{children:"extensions.dispatch"})}),"\nto send messages even if the extension is not connected to the main process."]}),"\n",(0,s.jsx)(n.h3,{id:"parameters-1",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"eventName"})," String: Name of the event."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"data"})," Object (optional): Additional data for the event."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"await Neutralino.extensions.broadcast('myTestEvent', 'Hello');\n\nawait Neutralino.extensions.broadcast('myTestEvent', {myData: 'Test data'});\n\nawait Neutralino.extensions.broadcast('myTestEvent');\n"})}),"\n",(0,s.jsx)(n.h2,{id:"extensionsgetstats",children:"extensions.getStats()"}),"\n",(0,s.jsx)(n.p,{children:"Returns details about connected and loaded extensions."}),"\n",(0,s.jsx)(n.h3,{id:"return-object-awaited",children:"Return Object (awaited):"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"loaded"})," String[]: An array of loaded extensions."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"connected"})," String[]: An array of connected extensions. These extensions have an active WebSocket-based IPC connection\nwith the main process."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"let stats = await Neutralino.extensions.getStats();\nconsole.log('stats: ', stats);\n"})})]})}function x(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var s=t(6540);const i={},a=s.createContext(i);function o(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);