"use strict";(self.webpackChunkneutralinojs_github_io=self.webpackChunkneutralinojs_github_io||[]).push([[1366],{9442:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var i=t(4848),s=t(8453);const o={title:"Neutralino.debug",toc_max_heading_level:2},a=void 0,r={id:"api/debug",title:"Neutralino.debug",description:"Neutralino.debug namespace contains application debugging utilities.",source:"@site/docs/api/debug.md",sourceDirName:"api",slug:"/api/debug",permalink:"/docs/api/debug",draft:!1,unlisted:!1,editUrl:"https://github.com/neutralinojs/neutralinojs.github.io/edit/main/docs/api/debug.md",tags:[],version:"current",frontMatter:{title:"Neutralino.debug",toc_max_heading_level:2},sidebar:"docs",previous:{title:"Neutralino.custom",permalink:"/docs/api/custom"},next:{title:"Neutralino.events",permalink:"/docs/api/events"}},l={},d=[{value:"debug.log(message, type)",id:"debuglogmessage-type",level:2},{value:"Parameters",id:"parameters",level:3}];function c(e){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Neutralino.debug"})," namespace contains application debugging utilities."]}),"\n",(0,i.jsx)(n.h2,{id:"debuglogmessage-type",children:"debug.log(message, type)"}),"\n",(0,i.jsxs)(n.p,{children:["Writes messages to ",(0,i.jsx)(n.code,{children:"neutralinojs.log"})," file or/and standard output streams.\xa0"]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["If your application is running via ",(0,i.jsx)(n.code,{children:"neu run"}),", you can see log\nmessages on your terminal."]})}),"\n",(0,i.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"message"})," String: Content to be logged."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"type"})," String (optional): Type of the message. Accepted values are ",(0,i.jsx)(n.code,{children:"INFO"}),", ",(0,i.jsx)(n.code,{children:"WARNING"}),", and ",(0,i.jsx)(n.code,{children:"ERROR"}),". The default value is ",(0,i.jsx)(n.code,{children:"INFO"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"await Neutralino.debug.log('Hello Neutralinojs');\n\nawait Neutralino.debug.log('An error occured', 'ERROR');\n\nawait Neutralino.debug.log('A warning message', 'WARNING');\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var i=t(6540);const s={},o=i.createContext(s);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);