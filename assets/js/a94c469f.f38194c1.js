(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{102:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return p})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return o}));var a=n(3),i=n(8),r=(n(0),n(121)),l={title:"Distribution Overview"},p={unversionedId:"distribution/overview",id:"distribution/overview",isDocsHomePage:!1,title:"Distribution Overview",description:"There are several ways to distribute Neutralinojs apps: creating portable zip files, standalone setup files, and network-based",source:"@site/docs/distribution/overview.md",slug:"/distribution/overview",permalink:"/docs/distribution/overview",editUrl:"https://github.com/neutralinojs/neutralinojs.github.io/edit/main/docs/distribution/overview.md",version:"current",sidebar:"docs",previous:{title:"Auto Updater",permalink:"/docs/how-to/auto-updater"},next:{title:"Framework Developer Guide",permalink:"/docs/contributing/framework-developer-guide"}},b=[{value:"Application build results",id:"application-build-results",children:[]},{value:"Selecting files for packaging",id:"selecting-files-for-packaging",children:[]},{value:"Creating portable application packages using build scripts",id:"creating-portable-application-packages-using-build-scripts",children:[{value:"Generating an application bundle for macOS",id:"generating-an-application-bundle-for-macos",children:[]},{value:"Generating an application bundle for Windows",id:"generating-an-application-bundle-for-windows",children:[]},{value:"Generating an application bundle for Linux",id:"generating-an-application-bundle-for-linux",children:[]}]},{value:"Creating application installers",id:"creating-application-installers",children:[]}],c={toc:b};function o(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"There are several ways to distribute Neutralinojs apps: creating portable zip files, standalone setup files, and network-based\nsmall setup files. You can select an option according to your application distribution preference."),Object(r.b)("h2",{id:"application-build-results"},"Application build results"),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"neu build")," command generates the following files on any supported operating system into the ",Object(r.b)("inlineCode",{parentName:"p"},"dist")," directory."),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Filename"),Object(r.b)("th",{parentName:"tr",align:null},"OS"),Object(r.b)("th",{parentName:"tr",align:null},"CPU architecture"),Object(r.b)("th",{parentName:"tr",align:null},"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"myapp-linux_x64")),Object(r.b)("td",{parentName:"tr",align:null},"Linux"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"x86_64")),Object(r.b)("td",{parentName:"tr",align:null},"Application binary")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"myapp-linux_armhf")),Object(r.b)("td",{parentName:"tr",align:null},"Linux"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"armhf")),Object(r.b)("td",{parentName:"tr",align:null},"Application binary")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"myapp-linux_arm64")),Object(r.b)("td",{parentName:"tr",align:null},"Linux"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"arm64")),Object(r.b)("td",{parentName:"tr",align:null},"Application binary")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"myapp-mac_x64")),Object(r.b)("td",{parentName:"tr",align:null},"macOS"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"x86_64")),Object(r.b)("td",{parentName:"tr",align:null},"Application binary (Intel)")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"myapp-mac_universal")),Object(r.b)("td",{parentName:"tr",align:null},"macOS"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"x86_64")," and ",Object(r.b)("inlineCode",{parentName:"td"},"arm64")),Object(r.b)("td",{parentName:"tr",align:null},"Application binary")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"myapp-mac_arm64")),Object(r.b)("td",{parentName:"tr",align:null},"macOS"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"arm64")),Object(r.b)("td",{parentName:"tr",align:null},"Application binary (M1/M2/M3)")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"myapp-win_x64")),Object(r.b)("td",{parentName:"tr",align:null},"Windows"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"x86_64")),Object(r.b)("td",{parentName:"tr",align:null},"Application binary")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"resources.neu")),Object(r.b)("td",{parentName:"tr",align:null},"all"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"N/A")),Object(r.b)("td",{parentName:"tr",align:null},"Application resource file")))),Object(r.b)("p",null,"Neutralinojs officially offers only pre-built ",Object(r.b)("inlineCode",{parentName:"p"},"x64")," and ",Object(r.b)("inlineCode",{parentName:"p"},"armhf/arm64")," Linux-only binaries.\nIf you need binaries for other CPU architectures, consider building binaries from the source\nwith ",Object(r.b)("a",{parentName:"p",href:"../contributing/framework-developer-guide"},"this guide"),". We are trying to officially support all CPU\narchitectures soon!"),Object(r.b)("h2",{id:"selecting-files-for-packaging"},"Selecting files for packaging"),Object(r.b)("p",null,"The neu CLI generates application binaries for all supported platforms at once. These binaries are pre-built binaries.\nTherefore, please check our\n",Object(r.b)("a",{parentName:"p",href:"https://github.com/neutralinojs/neutralinojs/security/policy#prebuilt-binaries"},"security policy")," before you continue\nwith the distribution process."),Object(r.b)("p",null,"As the first step for packaging, you can pick two files for each targeted operating system: application binary and\nthe resource file. For example, if you need to make an application package for ",Object(r.b)("inlineCode",{parentName:"p"},"x64")," Linux computers, pick ",Object(r.b)("inlineCode",{parentName:"p"},"myapp-linux_x64"),"\nand the ",Object(r.b)("inlineCode",{parentName:"p"},"resources.neu")," file. The ",Object(r.b)("inlineCode",{parentName:"p"},"resources.neu")," contains all application resources, so, double click on the binary and check whether\nthe resource file is not corrupted."),Object(r.b)("h2",{id:"creating-portable-application-packages-using-build-scripts"},"Creating portable application packages using build scripts"),Object(r.b)("p",null,"The ",Object(r.b)("a",{parentName:"p",href:"https://github.com/hschneider/neutralino-build-scripts/"},Object(r.b)("inlineCode",{parentName:"a"},"hschneider/neutralino-build-scripts"))," community project offers pre-developed build scripts for generating platform-specific application bundles. For example, it generates a standard app structure on GNU/Linux by generating ",Object(r.b)("inlineCode",{parentName:"p"},".desktop")," file with app icon by also providing a shell script to install the app. "),Object(r.b)("p",null,"Clone the scripts to your root directory of your app folder to get started with Neutralinojs build scripts:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/hschneider/neutralino-build-scripts.git build-scripts\n")),Object(r.b)("p",null,"Install jq, which is required for parsing JSON files:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"# On macOS:\nbrew install jq\n# On Linux or Windows/WSL:\nsudo apt-get install jq\n")),Object(r.b)("p",null,"Update ",Object(r.b)("inlineCode",{parentName:"p"},"neutralino.config.json")," file with build scripts configuration as follows:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json"},'  "buildScript": {\n    "mac": {\n      "architecture": ["x64", "arm64", "universal"],\n      "minimumOS": "10.13.0",\n      "appName": "myapp",\n      "appBundleName": "myapp",\n      "appIdentifier": "com.marketmix.ext.bun.demo",\n      "appIcon":  "resources/icons/icon.icns"\n    },\n    "win": {\n      "architecture": ["x64"],\n      "appName": "myapp",\n      "appIcon": "resources/icons/icon.ico"\n    },\n    "linux": {\n      "architecture": ["x64", "arm64", "armhf"],\n      "appName": "myapp",\n      "appIcon": "resources/icons/icon.png",\n      "appPath":  "/usr/share/myapp",\n      "appIconPath": "/usr/share/myapp/icon.png",\n      "appIconLocation": "/usr/share/myapp/icon.png"\n    }\n  }\n')),Object(r.b)("h3",{id:"generating-an-application-bundle-for-macos"},"Generating an application bundle for macOS"),Object(r.b)("p",null,"You can generate a new application bundle for macOS by running the following command:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"./build-mac.sh\n")),Object(r.b)("p",null,"The build is created in the ",Object(r.b)("inlineCode",{parentName:"p"},"./dist")," folder."),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"buildScript/mac")," JSON segment in the config-file contains the following fields:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Key"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"architecture"),Object(r.b)("td",{parentName:"tr",align:null},"This is an array of the architectures, you want to build. In our example we build all 3 architectures.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"minimumOS"),Object(r.b)("td",{parentName:"tr",align:null},"The minimum macOS version.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"appName"),Object(r.b)("td",{parentName:"tr",align:null},"The app-name as displayed in the Finder.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"appBundleName"),Object(r.b)("td",{parentName:"tr",align:null},"The macOS app-bundle name.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"appIdentifier"),Object(r.b)("td",{parentName:"tr",align:null},"The macOS app-identifier.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"appIcon"),Object(r.b)("td",{parentName:"tr",align:null},"Path to the app-icon in ",Object(r.b)("strong",{parentName:"td"},".icns")," format. If only the filename is submitted, the file is expected in the project's root.")))),Object(r.b)("p",null,"Visit the ",Object(r.b)("a",{parentName:"p",href:"https://github.com/hschneider/neutralino-build-scripts/#build-for-macos"},"build scripts official documentation")," for more details."),Object(r.b)("h3",{id:"generating-an-application-bundle-for-windows"},"Generating an application bundle for Windows"),Object(r.b)("p",null,"You can generate a new application bundle for Windows by running the following command:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"./build-win.sh\n")),Object(r.b)("p",null,"The build is created in the ",Object(r.b)("inlineCode",{parentName:"p"},"./dist")," folder."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"You can now run install ",Object(r.b)("inlineCode",{parentName:"p"},"install-icon.cmd")," to set the app icon as specifed in config file. This script required you to have ",Object(r.b)("a",{parentName:"p",href:"https://www.angusj.com/resourcehacker/"},"Resource Hacker")," installed on your machine.")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"buildScript/win")," JSON segment in the config-file contains the following fields:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Key"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"architecture"),Object(r.b)("td",{parentName:"tr",align:null},"This is an array of the architectures, you want to build. Because Neutralino currently only support 'x64', you should leave this untouched.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"appName"),Object(r.b)("td",{parentName:"tr",align:null},"The app-name as displayed in the File Explorer, with or without .exe-suffix.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"appIcon"),Object(r.b)("td",{parentName:"tr",align:null},"Path to the app-icon in ",Object(r.b)("strong",{parentName:"td"},".ico")," format. If only the filename is submitted, the file is expected in the project's root. The icon is copied from this path into the app-bundle. To apply the icon to the executable file, you'll have to run ",Object(r.b)("strong",{parentName:"td"},Object(r.b)("a",{parentName:"strong",href:"https://www.angusj.com/resourcehacker/"},"Resource Hacker"))," from a Windows machine. To do so, just double-click ",Object(r.b)("strong",{parentName:"td"},"install-icon.cmd")," in the app-bundle.")))),Object(r.b)("p",null,"Visit the ",Object(r.b)("a",{parentName:"p",href:"https://github.com/hschneider/neutralino-build-scripts/#build-for-windows"},"build scripts official documentation")," for more details."),Object(r.b)("h3",{id:"generating-an-application-bundle-for-linux"},"Generating an application bundle for Linux"),Object(r.b)("p",null,"You can generate a new application bundle for GNU/Linux by running the following command:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"./build-linux.sh\n")),Object(r.b)("p",null,"All build targets are created in the ",Object(r.b)("inlineCode",{parentName:"p"},"./dist")," folder."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Calling ",Object(r.b)("inlineCode",{parentName:"p"},"sudo ./install.sh")," from your build folder automatically installs the app to the locations you defined.")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"buildScript/linux")," JSON segment in the config-file contains the following fields:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Key"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"architecture"),Object(r.b)("td",{parentName:"tr",align:null},"This is an array of the architectures, you want to build. In our example we build all 3 architectures.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"appName"),Object(r.b)("td",{parentName:"tr",align:null},"The app-name as displayed in the File Explorer.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"appIcon"),Object(r.b)("td",{parentName:"tr",align:null},"Path to the app-icon in ",Object(r.b)("strong",{parentName:"td"},".png or .svg")," format. If only the filename is submitted, the file is expected in the project's root. The icon is copied from this path into the app-bundle. Example: ",Object(r.b)("inlineCode",{parentName:"td"},"resources/icons/icon.png"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"appPath"),Object(r.b)("td",{parentName:"tr",align:null},"The path of application directory in system where the source files will live ",Object(r.b)("strong",{parentName:"td"},"after")," installing without the executable name and without ending slash. Example: ",Object(r.b)("inlineCode",{parentName:"td"},"/usr/share/myapp"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"appIconPath"),Object(r.b)("td",{parentName:"tr",align:null},"This is path to application icon ",Object(r.b)("strong",{parentName:"td"},"after")," the application has been installed in the Linux system. This path is written to the .desktop-file. Example: ",Object(r.b)("inlineCode",{parentName:"td"},"/usr/share/myapp/icon.png"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"appIconLocation"),Object(r.b)("td",{parentName:"tr",align:null},"Same as appIconPath.")))),Object(r.b)("p",null,"Visit the ",Object(r.b)("a",{parentName:"p",href:"https://github.com/hschneider/neutralino-build-scripts/#build-for-linux"},"build scripts official documentation")," for more details."),Object(r.b)("h2",{id:"creating-application-installers"},"Creating application installers"),Object(r.b)("p",null,"The following guides are not documented yet."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#"},"Creating an application installer for Linux")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#"},"Creating an application installer for macOS")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#"},"Creating an application installer for Windows"))))}o.isMDXComponent=!0},121:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=i.a.createContext({}),o=function(e){var t=i.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},u=function(e){var t=o(e.components);return i.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},s=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=b(e,["components","mdxType","originalType","parentName"]),u=o(n),s=a,m=u["".concat(l,".").concat(s)]||u[s]||d[s]||r;return n?i.a.createElement(m,p(p({ref:t},c),{},{components:n})):i.a.createElement(m,p({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=s;var p={};for(var b in t)hasOwnProperty.call(t,b)&&(p[b]=t[b]);p.originalType=e,p.mdxType="string"==typeof e?e:a,l[1]=p;for(var c=2;c<r;c++)l[c]=n[c];return i.a.createElement.apply(null,l)}return i.a.createElement.apply(null,n)}s.displayName="MDXCreateElement"}}]);